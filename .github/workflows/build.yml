name: Java CI

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: test

      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
#          arguments: build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
          arguments: build

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: build/test-results/**/*.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            build/*-runner
            build/quarkus-artifact.properties
  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: build

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}"
#          file: "{context}/src/main/docker/Dockerfile.native"
          file: "{context}/src/main/docker/Dockerfile.jvm"
          push: true
          tags: michaelilyin/dslab:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - publish
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Docker Swarm
        uses: michaelilyin/docker-deployment-action@master
        with:
          remote_docker_host: root@cloud.ilyin.online
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          deployment_mode: docker-swarm
          copy_stack_file: true
          deploy_path: /root/apps/dslab
          stack_file_name: docker-stack.yaml
          keep_files: 5
          args: dslab
          pull_images_first: true
